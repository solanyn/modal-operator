name: Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Run ruff check
        run: uv run ruff check .

      - name: Run ruff format check
        run: uv run ruff format --check .

      - name: Run mypy type checking
        run: uv run mypy modal_operator
        continue-on-error: true  # Type checking is informational for now

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Run unit tests
        run: |
          # Skip tests that require Modal library fix
          uv run python -m pytest tests/ \
            --ignore=tests/test_e2e.py \
            --ignore=tests/test_modal_client.py \
            -v --tb=short \
            --cov=modal_operator \
            --cov-report=xml \
            --cov-report=term
        continue-on-error: true  # Tests need updates, don't block PRs yet

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: github.event_name == 'pull_request'
        with:
          files: ./coverage.xml
          flags: unittests
        continue-on-error: true

  validate-crds:
    name: Validate CRDs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Generate CRDs
        run: uv run python scripts/generate-crds.py

      - name: Check for CRD changes
        run: |
          git diff --exit-code charts/modal-operator/crds/ || \
          (echo "CRDs need to be regenerated. Run: uv run python scripts/generate-crds.py" && exit 1)

      - name: Validate CRD YAML
        run: |
          for file in charts/modal-operator/crds/*.yaml; do
            echo "Validating $file"
            python -c "import yaml; yaml.safe_load(open('$file'))"
          done

  helm-lint:
    name: Helm Chart Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Lint Helm chart
        run: helm lint charts/modal-operator

      - name: Template Helm chart
        run: |
          helm template modal-operator charts/modal-operator \
            --set image.tag=test \
            --set modal.tokenId=test \
            --set modal.tokenSecret=test
