apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "modal-operator.fullname" . }}
  labels:
    {{- include "modal-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "modal-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "modal-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "modal-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 8081
              protocol: TCP
            - name: webhook
              containerPort: 8443
              protocol: TCP
          env:
            - name: MODAL_ENVIRONMENT
              value: "{{ .Values.modal.environment }}"
            - name: MODAL_TOKEN_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.modal.tokenSecret }}
                  key: MODAL_TOKEN_ID
            - name: MODAL_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.modal.tokenSecret }}
                  key: MODAL_TOKEN_SECRET
            - name: OPERATOR_IMAGE
              value: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.webhook.enabled }}
          volumeMounts:
          - name: webhook-certs
            mountPath: /etc/certs
            readOnly: true
          {{- end }}
      {{- if .Values.webhook.enabled }}
      volumes:
      - name: webhook-certs
        secret:
          secretName: {{ include "modal-operator.fullname" . }}-webhook-cert
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
